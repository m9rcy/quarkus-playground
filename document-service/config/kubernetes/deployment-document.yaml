---
apiVersion: "v1"
kind: "List"
items:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
          labels:
              app.kubernetes.io/name: "document-service"
              app.kubernetes.io/version: "1.0.0-SNAPSHOT"
          name: "document-service"
      spec:
          ports:
              - name: "http"
                port: 8092
                targetPort: 8092
          selector:
              app.kubernetes.io/name: "document-service"
              app.kubernetes.io/version: "1.0.0-SNAPSHOT"
          type: "NodePort"
    - apiVersion: "apps/v1"
      kind: "Deployment"
      metadata:
          labels:
              app.kubernetes.io/name: "document-service"
              app.kubernetes.io/version: "1.0.0-SNAPSHOT"
          name: "document-service"
      spec:
          replicas: 1
          selector:
              matchLabels:
                  app.kubernetes.io/name: "document-service"
                  app.kubernetes.io/version: "1.0.0-SNAPSHOT"
          template:
              metadata:
                  labels:
                      app.kubernetes.io/name: "document-service"
                      app.kubernetes.io/version: "1.0.0-SNAPSHOT"
              spec:
                  containers:
                      - image: "quarkus/document-service-jvm:latest"
                        imagePullPolicy: "IfNotPresent"
                        name: "document-service"
                        livenessProbe:
                          failureThreshold: 3
                          httpGet:
                            path: "/health/live"
                            port: 8092
                            scheme: "HTTP"
                          initialDelaySeconds: 0
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 10
                        ports:
                            - containerPort: 8092
                              name: "http"
                              protocol: "TCP"
                        readinessProbe:
                          failureThreshold: 3
                          httpGet:
                            path: "/health/ready"
                            port: 8092
                            scheme: "HTTP"
                          initialDelaySeconds: 0
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 10
                        env:
                        - name: "KUBERNETES_NAMESPACE"
                          valueFrom:
                            fieldRef:
                              fieldPath: "metadata.namespace"
                        - name: QUARKUS_DATASOURCE_URL
                          valueFrom:
                            configMapKeyRef:
                              name: document-config
                              key: database
                        - name: QUARKUS_HTTP_PORT
                          valueFrom:
                            configMapKeyRef:
                              name: document-config
                              key: port
                        - name: IO_M9RCY_PLAYGROUND_WEB_CLIENT_UPLOADSERVICE_MP_REST_URL
                          valueFrom:
                            configMapKeyRef:
                              name: document-config
                              key: upload
                        - name: KAFKA_BOOTSTRAP_SERVERS
                          valueFrom:
                              configMapKeyRef:
                                  name: document-config
                                  key: kafka
