<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Doc Load Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">multipart/form-data; boundary=AaB03x</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name"></stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">--AaB03x&#xd;
content-disposition: form-data; name=&quot;fileName&quot;&#xd;
&#xd;
sample&#xd;
--AaB03x&#xd;
content-disposition: form-data; name=&quot;documentType&quot;&#xd;
&#xd;
CREDIT_CARD&#xd;
--AaB03x&#xd;
content-disposition: form-data; name=&quot;referenceId&quot;&#xd;
&#xd;
1&#xd;
--AaB03x&#xd;
content-disposition: form-data; name=&quot;crsId&quot;&#xd;
&#xd;
123&#xd;
--AaB03x&#xd;
content-disposition: form-data; name=&quot;tags&quot;&#xd;
&#xd;
[&quot;credit&quot; ]&#xd;
--AaB03x&#xd;
content-disposition: form-data; name=&quot;file&quot;; filename=&quot;sample.txt&quot;&#xd;
Content-Type: text/plain&#xd;
Content-Transfer-Encoding: base64&#xd;
&#xd;
TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gSW50ZWdlciBuZWMgb2Rpby4gUHJhZXNlbnQgbGliZXJvLiBTZWQgY3Vyc3VzIGFudGUgZGFwaWJ1cyBkaWFtLiBTZWQgbmlzaS4gTnVsbGEgcXVpcyBzZW0gYXQgbmliaCBlbGVtZW50dW0gaW1wZXJkaWV0LiBEdWlzIHNhZ2l0dGlzIGlwc3VtLiBQcmFlc2VudCBtYXVyaXMuIEZ1c2NlIG5lYyB0ZWxsdXMgc2VkIGF1Z3VlIHNlbXBlciBwb3J0YS4gTWF1cmlzIG1hc3NhLiBWZXN0aWJ1bHVtIGxhY2luaWEgYXJjdSBlZ2V0IG51bGxhLiBDbGFzcyBhcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIEN1cmFiaXR1ciBzb2RhbGVzIGxpZ3VsYSBpbiBsaWJlcm8uIFNlZCBkaWduaXNzaW0gbGFjaW5pYSBudW5jLiBDdXJhYml0dXIgdG9ydG9yLiBQZWxsZW50ZXNxdWUgbmliaC4gQWVuZWFuIHF1YW0uIEluIHNjZWxlcmlzcXVlIHNlbSBhdCBkb2xvci4gTWFlY2VuYXMgbWF0dGlzLiBTZWQgY29udmFsbGlzIHRyaXN0aXF1ZSBzZW0uIFByb2luIHV0IGxpZ3VsYSB2ZWwgbnVuYyBlZ2VzdGFzIHBvcnR0aXRvci4gTW9yYmkgbGVjdHVzIHJpc3VzLCBpYWN1bGlzIHZlbCwgc3VzY2lwaXQgcXVpcywgbHVjdHVzIG5vbiwgbWFzc2EuIEZ1c2NlIGFjIHR1cnBpcyBxdWlzIGxpZ3VsYSBsYWNpbmlhIGFsaXF1ZXQuIE1hdXJpcyBpcHN1bS4gTnVsbGEgbWV0dXMgbWV0dXMsIHVsbGFtY29ycGVyIHZlbCwgdGluY2lkdW50IHNlZCwgZXVpc21vZCBpbiwgbmliaC4gUXVpc3F1ZSB2b2x1dHBhdCBjb25kaW1lbnR1bSB2ZWxpdC4gQ2xhc3MgYXB0ZW50IHRhY2l0aSBzb2Npb3NxdSBhZCBsaXRvcmEgdG9ycXVlbnQgcGVyIGNvbnViaWEgbm9zdHJhLCBwZXIgaW5jZXB0b3MgaGltZW5hZW9zLiBOYW0gbmVjIGFudGUuIFNlZCBsYWNpbmlhLCB1cm5hIG5vbiB0aW5jaWR1bnQgbWF0dGlzLCB0b3J0b3IgbmVxdWUgYWRpcGlzY2luZyBkaWFtLCBhIGN1cnN1cyBpcHN1bSBhbnRlIHF1aXMgdHVycGlzLiBOdWxsYSBmYWNpbGlzaS4gVXQgZnJpbmdpbGxhLiBTdXNwZW5kaXNzZSBwb3RlbnRpLiBOdW5jIGZldWdpYXQgbWkgYSB0ZWxsdXMgY29uc2VxdWF0IGltcGVyZGlldC4gVmVzdGlidWx1bSBzYXBpZW4uIFByb2luIHF1YW0uIEV0aWFtIHVsdHJpY2VzLiBTdXNwZW5kaXNzZSBpbiBqdXN0byBldSBtYWduYSBsdWN0dXMgc3VzY2lwaXQuIFNlZCBsZWN0dXMuIEludGVnZXIgZXVpc21vZCBsYWN1cyBsdWN0dXMgbWFnbmEuIFF1aXNxdWUgY3Vyc3VzLCBtZXR1cyB2aXRhZSBwaGFyZXRyYSBhdWN0b3IsIHNlbSBtYXNzYSBtYXR0aXMgc2VtLCBhdCBpbnRlcmR1bSBtYWduYSBhdWd1ZSBlZ2V0IGRpYW0uIFZlc3RpYnVsdW0gYW50ZSBpcHN1bSBwcmltaXMgaW4gZmF1Y2lidXMgb3JjaSBsdWN0dXMgZXQgdWx0cmljZXMgcG9zdWVyZSBjdWJpbGlhIEN1cmFlOyBNb3JiaSBsYWNpbmlhIG1vbGVzdGllIGR1aS4gUHJhZXNlbnQgYmxhbmRpdCBkb2xvci4gU2VkIG5vbiBxdWFtLiBJbiB2ZWwgbWkgc2l0IGFtZXQgYXVndWUgY29uZ3VlIGVsZW1lbnR1bS4gTW9yYmkgaW4gaXBzdW0gc2l0IGFtZXQgcGVkZSBmYWNpbGlzaXMgbGFvcmVldC4gRG9uZWMgbGFjdXMgbnVuYywgdml2ZXJyYSBuZWMsIGJsYW5kaXQgdmVsLCBlZ2VzdGFzIGV0LCBhdWd1ZS4gVmVzdGlidWx1bSB0aW5jaWR1bnQgbWFsZXN1YWRhIHRlbGx1cy4gVXQgdWx0cmljZXMgdWx0cmljZXMgZW5pbS4gQ3VyYWJpdHVyIHNpdCBhbWV0IG1hdXJpcy4gTW9yYmkgaW4gZHVpIHF1aXMgZXN0IHB1bHZpbmFyIHVsbGFtY29ycGVyLiBOdWxsYSBmYWNpbGlzaS4gSW50ZWdlciBsYWNpbmlhIHNvbGxpY2l0dWRpbiBtYXNzYS4gQ3JhcyBtZXR1cy4gU2VkIGFsaXF1ZXQgcmlzdXMgYSB0b3J0b3IuIEludGVnZXIgaWQgcXVhbS4gTW9yYmkgbWkuIFF1aXNxdWUgbmlzbCBmZWxpcywgdmVuZW5hdGlzIHRyaXN0aXF1ZSwgZGlnbmlzc2ltIGluLCB1bHRyaWNlcyBzaXQgYW1ldCwgYXVndWUuIFByb2luIHNvZGFsZXMgbGliZXJvIGVnZXQgYW50ZS4gTnVsbGEgcXVhbS4gQWVuZWFuIGxhb3JlZXQuIFZlc3RpYnVsdW0gbmlzaSBsZWN0dXMsIGNvbW1vZG8gYWMsIGZhY2lsaXNpcyBhYywgdWx0cmljaWVzIGV1LCBwZWRlLiBVdCBvcmNpIHJpc3VzLCBhY2N1bXNhbiBwb3J0dGl0b3IsIGN1cnN1cyBxdWlzLCBhbGlxdWV0IGVnZXQsIGp1c3RvLiBTZWQgcHJldGl1bSBibGFuZGl0IG9yY2kuIFV0IGV1IGRpYW0gYXQgcGVkZSBzdXNjaXBpdCBzb2RhbGVzLiBBZW5lYW4gbGVjdHVzIGVsaXQsIGZlcm1lbnR1bSBub24sIGNvbnZhbGxpcyBpZCwgc2FnaXR0aXMgYXQsIG5lcXVlLiBOdWxsYW0gbWF1cmlzIG9yY2ksIGFsaXF1ZXQgZXQsIGlhY3VsaXMgZXQsIHZpdmVycmEgdml0YWUsIGxpZ3VsYS4gTnVsbGEgdXQgZmVsaXMgaW4gcHVydXMgYWxpcXVhbSBpbXBlcmRpZXQuIE1hZWNlbmFzIGFsaXF1ZXQgbW9sbGlzIGxlY3R1cy4gVml2YW11cyBjb25zZWN0ZXR1ZXIgcmlzdXMgZXQgdG9ydG9yLiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBJbnRlZ2VyIG5lYyBvZGlvLiBQcmFlc2VudCBsaWJlcm8uIFNlZCBjdXJzdXMgYW50ZSBkYXBpYnVzIGRpYW0uIFNlZCBuaXNpLiBOdWxsYSBxdWlzIHNlbSBhdCBuaWJoIGVsZW1lbnR1bSBpbXBlcmRpZXQuIER1aXMgc2FnaXR0aXMgaXBzdW0uIFByYWVzZW50IG1hdXJpcy4gRnVzY2UgbmVjIHRlbGx1cyBzZWQgYXVndWUgc2VtcGVyIHBvcnRhLiBNYXVyaXMgbWFzc2EuIFZlc3RpYnVsdW0gbGFjaW5pYSBhcmN1IGVnZXQgbnVsbGEuIENsYXNzIGFwdGVudCB0YWNpdGkgc29jaW9zcXUgYWQgbGl0b3JhIHRvcnF1ZW50IHBlciBjb251YmlhIG5vc3RyYSwgcGVyIGluY2VwdG9zIGhpbWVuYWVvcy4gQ3VyYWJpdHVyIHNvZGFsZXMgbGlndWxhIGluIGxpYmVyby4gU2VkIGRpZ25pc3NpbSBsYWNpbmlhIG51bmMuIEN1cmFiaXR1ciB0b3J0b3IuIFBlbGxlbnRlc3F1ZSBuaWJoLiBBZW5lYW4gcXVhbS4gSW4gc2NlbGVyaXNxdWUgc2VtIGF0IGRvbG9yLiBNYWVjZW5hcyBtYXR0aXMuIFNlZCBjb252YWxsaXMgdHJpc3RpcXVlIHNlbS4gUHJvaW4gdXQgbGlndWxhIHZlbCBudW5jIGVnZXN0YXMgcG9ydHRpdG9yLiBNb3JiaSBsZWN0dXMgcmlzdXMsIGlhY3VsaXMgdmVsLCBzdXNjaXBpdCBxdWlzLCBsdWN0dXMgbm9uLCBtYXNzYS4gRnVzY2UgYWMgdHVycGlzIHF1aXMgbGlndWxhIGxhY2luaWEgYWxpcXVldC4gTWF1cmlzIGlwc3VtLiBOdWxsYSBtZXR1cyBtZXR1cywgdWxsYW1jb3JwZXIgdmVsLCB0aW5jaWR1bnQgc2VkLCBldWlzbW9kIGluLCBuaWJoLiBRdWlzcXVlIHZvbHV0cGF0IGNvbmRpbWVudHVtIHZlbGl0LiBDbGFzcyBhcHRlbnQgdGFjaXRpIHNvY2lvc3F1IGFkIGxpdG9yYSB0b3JxdWVudCBwZXIgY29udWJpYSBub3N0cmEsIHBlciBpbmNlcHRvcyBoaW1lbmFlb3MuIE5hbSBuZWMgYW50ZS4gU2VkIGxhY2luaWEsIHVybmEgbm9uIHRpbmNpZHVudCBtYXR0aXMsIHRvcnRvciBuZXF1ZSBhZGlwaXNjaW5nIGRpYW0sIGEgY3Vyc3VzIGlwc3VtIGFudGUgcXVpcyB0dXJwaXMuIE51bGxhIGZhY2lsaXNpLiBVdCBmcmluZ2lsbGEuIA==&#xd;
--AaB03x--</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">8092</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">documents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
